{"version":3,"file":"static/js/581.dcf806e3.chunk.js","mappings":"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","sources":["components/DeleteBtn/DeleteBtn.jsx","components/List/ItemStyles.styled.js","components/List/Item.jsx","components/List/ListStyles.styled.js","components/EditModal/EditModalStyles.styled.js","components/EditModal/EditFormStyles.styled.js","components/EditModal/EditForm.jsx","components/EditModal/EditModal.jsx","components/List/ContainerStyles.styled.js","components/List/List.jsx","components/Searching/SearchingStyles.styled.js","components/Searching/Searching.jsx","components/ContactsForm/ContactsFormStyles.styled.js","components/ContactsForm/ContactsForm.jsx","pages/styles/ContactsStyles.styled.js","pages/Contacts.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { RiDeleteBin6Line } from 'react-icons/ri';\nimport { PiSpinnerGap } from 'react-icons/pi';\nimport { getDeleting } from 'redux/contacts/contactsSlice';\nimport { useState } from 'react';\n\nconst DeleteBtn = ({ userId }) => {\n  const dispatch = useDispatch();\n  const Deleting = useSelector(getDeleting);\n  const [isCurrentButton, setIsCurrentButton] = useState(false);\n\n  const handleDelete = e => {\n    setIsCurrentButton(true);\n    dispatch(deleteContact(userId)).finally(() => {\n      setIsCurrentButton(false);\n    });\n  };\n\n  return (\n    <button\n      disabled={Deleting}\n      className=\"button-item delete\"\n      onClick={handleDelete}\n    >\n      {Deleting && isCurrentButton ? (\n        <PiSpinnerGap className=\"spinner\" size={24} />\n      ) : (\n        <RiDeleteBin6Line size={24} />\n      )}\n    </button>\n  );\n};\n\nexport default DeleteBtn;","import styled from 'styled-components';\n\nexport const ItemStyles = styled.li`\n  border: 1px solid black;\n  border-radius: 12px;\n  display: flex;\n  padding: 15px 120px;\n  justify-content: space-between;\n  background-color: rgb(220 229 226 / 30%);\n\n  .buttons-list {\n    display: flex;\n    column-gap: 16px;\n    list-style: none;\n  }\n\n  .button-item {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n  }\n  .phone {\n    background-color: #00ff00;\n    color: white;\n  }\n\n  .phone,\n  .edit,\n  .delete {\n    transition: 250ms linear;\n  }\n\n  .phone:hover,\n  .phone:focus,\n  .edit:hover,\n  .edit:focus,\n  .delete:hover,\n  .delete:focus {\n    scale: 1.3;\n  }\n\n  .edit {\n    color: blue;\n    border: none;\n    background-color: rgba(209, 188, 138, 1);\n  }\n  .delete {\n    background-color: red;\n    color: white;\n    border: none;\n  }\n\n  .name {\n    color: green;\n    text-transform: capitalize;\n  }\n\n  .number {\n    color: blue;\n  }\n\n  .user-container {\n    text-align: start;\n  }\n`;","import DeleteBtn from 'components/DeleteBtn/DeleteBtn';\nimport { ItemStyles } from './ItemStyles.styled';\nimport { IoMdCall } from 'react-icons/io';\n\nconst Item = ({ userName, userNumber, id }) => {\n  return (\n    <ItemStyles id={id}>\n      <div className=\"user-container\">\n        <p className=\"name\">{userName}</p>\n        <p className=\"number\">{userNumber}</p>\n      </div>\n\n      <ul className=\"buttons-list\">\n        <li>\n          <a\n            className=\"button-item phone\"\n            href={`tel:${userNumber.replace('-', '').replace(' ', '')}`}\n          >\n            <IoMdCall size={20} />\n          </a>\n        </li>\n\n        <li>\n          <DeleteBtn userId={id} />\n        </li>\n      </ul>\n    </ItemStyles>\n  );\n};\n\nexport default Item;\n","import styled from 'styled-components';\n\nconst ListStyles = styled.ul`\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  row-gap: 25px;\n  margin-top: 8px;\n  padding: 20px 10px;\n`;\n\nexport default ListStyles;","import styled from 'styled-components';\n\nconst EditModalStyles = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n  transition: 250ms linear;\n\n  .modal {\n    position: relative;\n    height: 400px;\n    width: 80%;\n    max-height: 95%;\n    position: absolute;\n    background-color: rgba(255, 248, 220, 1);\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border-radius: 20px;\n    padding: 50px 20px;\n    text-align: center;\n  }\n\n  @media screen and (min-width: 768px) {\n    .modal {\n      width: 500px;\n    }\n  }\n  .first {\n    color: black;\n  }\n\n  .user-info-container {\n    text-align: start;\n    font-size: 20px;\n    margin-bottom: 20px;\n    word-wrap: break-word;\n    max-width: 500px;\n  }\n\n  .user-info-item {\n    color: green;\n  }\n\n  .user-info-current {\n    color: blue;\n  }\n\n  h2 {\n    margin-bottom: 20px;\n  }\n\n  .close-btn {\n    position: absolute;\n    right: 30px;\n    top: 18px;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: transparent;\n    color: green;\n    transition: 250ms linear;\n  }\n\n  .close-btn:hover,\n  .close-btn:focus {\n    color: blue;\n  }\n`;\n\nexport default EditModalStyles;","import styled from 'styled-components';\n\nexport const EditFormStyles = styled.form`\n  width: 80%;\n  background-color: rgba(244, 164, 96, 0.3);\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  row-gap: 30px;\n  padding: 40px 10px;\n  border-radius: 20px;\n  margin-top: 40px;\n  border: 1px solid black;\n  .label-container {\n    width: 180px;\n    margin-left: auto;\n    margin-right: auto;\n    position: relative;\n    display: inline-block;\n  }\n\n  .notify {\n    color: blue;\n  }\n  .invalid {\n    color: red;\n  }\n\n  .invalid,\n  .notify {\n    margin-top: -20px;\n  }\n\n  label {\n    position: absolute;\n    left: 8px;\n    bottom: 50%;\n    transition: 250ms linear;\n    transform: translate(0, 50%);\n    font-size: 14px;\n    color: blue;\n  }\n\n  input:focus + label {\n    transform: translateY(-100%);\n  }\n\n  input:not(:placeholder-shown) + label {\n    transform: translateY(-100%);\n  }\n\n  input {\n    border-radius: 8px;\n    padding-left: 10px;\n    height: 20px;\n  }\n\n  input::placeholder {\n    opacity: 0;\n  }\n\n  button {\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 8px;\n    padding: 8px 12px;\n    background-color: blue;\n    color: white;\n    transition: 250ms linear;\n    column-gap: 8px;\n  }\n\n  button:hover,\n  button:focus {\n    background-color: green;\n  }\n\n  button[disabled] {\n    background-color: gray;\n  }\n`;","import { useCustomContext } from 'context/userContext';\nimport { useEffect, useState } from 'react';\nimport { editContact } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContactsList, getIsEditing } from 'redux/contacts/contactsSlice';\nimport { EditFormStyles } from './EditFormStyles.styled';\nimport { FiEdit2 } from 'react-icons/fi';\nimport { PiSpinner } from 'react-icons/pi';\n\nconst EditForm = () => {\n  const { name, number, id, isShowModal, setToggleShowModal } =\n    useCustomContext();\n  const [editName, setEditName] = useState('');\n  const [editNumber, setEditNumber] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const [invalidMessage, setInvalidMessage] = useState('');\n  const contacts = useSelector(getContactsList);\n  const editing = useSelector(getIsEditing);\n  const [onSubmitClick, setOnSubmitClick] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    if (e.target.name === 'name') {\n      setEditName(e.target.value);\n    } else {\n      setEditNumber(e.target.value);\n    }\n  };\n\n  useEffect(() => {\n    const checkedEditName = editName.toLowerCase().trim();\n    const checkedEditNumber = editNumber.trim();\n    const checkedName = name.toLowerCase().trim();\n    const checkedNumber = number.trim();\n\n    if (\n      checkedEditName === checkedName &&\n      editNumber.trim() === checkedNumber.trim()\n    ) {\n      setInvalidMessage(`Its current name and number`);\n      setCanSubmit(false);\n    } else if (\n      (checkedEditName === checkedName && !checkedEditNumber) ||\n      (checkedEditNumber === checkedNumber && !checkedEditName)\n    ) {\n      if (checkedEditName === checkedName && !checkedEditNumber) {\n        setInvalidMessage(`You are alredy have this contact name in your book`);\n      } else if (checkedEditNumber === checkedNumber && !checkedEditName) {\n        setInvalidMessage(\n          `You are alredy have this contact number in your book`\n        );\n      }\n      setCanSubmit(false);\n    } else if (checkedEditName && checkedEditName.length < 3) {\n      setInvalidMessage('Name should be minimun 3 symbols');\n      setCanSubmit(false);\n    } else if (checkedEditNumber && checkedEditNumber.length < 5) {\n      setInvalidMessage('Number should be minimun 5 symbols');\n      setCanSubmit(false);\n    } else if (!checkedEditNumber && !checkedEditName) {\n      setInvalidMessage('Please edit something');\n      setCanSubmit(false);\n    } else if (\n      contacts.some(\n        ({ name, number, id: itemId }) =>\n          (name.toLowerCase().trim() === checkedEditName ||\n            number === checkedEditNumber) &&\n          id !== itemId\n      )\n    ) {\n      setInvalidMessage('You alredy have contact with this number or name');\n      setCanSubmit(false);\n    } else if (editName.length > 16) {\n      setCanSubmit(false);\n      setInvalidMessage('Contact name should be 16 symbols maximum');\n    } else if (editNumber.length > 16) {\n      setCanSubmit(false);\n      setInvalidMessage('Contact number should be 16 symbols maximum');\n    } else {\n      setInvalidMessage('');\n      setCanSubmit(true);\n    }\n  }, [contacts, editName, editNumber, id, name, number]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const sendingName = editName ? editName : name;\n    const sendingNumber = editNumber ? editNumber : number;\n\n    dispatch(editContact({ id, name: sendingName, number: sendingNumber }));\n    setOnSubmitClick(true);\n  };\n\n  useEffect(() => {\n    if (!editing && onSubmitClick) {\n      setToggleShowModal(!isShowModal);\n    }\n  }, [editing, isShowModal, onSubmitClick, setToggleShowModal]);\n\n  return (\n    <EditFormStyles autoComplete=\"off\" onSubmit={handleSubmit}>\n      <div className=\"label-container\">\n        <input\n          placeholder=\"Name\"\n          id=\"edit-name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          name=\"name\"\n          type=\"text\"\n          value={editName}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"edit-name\">Name </label>\n      </div>\n      <div className=\"label-container\">\n        <input\n          placeholder=\"Number\"\n          id=\"edit-number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          name=\"number\"\n          type=\"tel\"\n          value={editNumber}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"edit-number\">Phone</label>\n      </div>\n\n      <button disabled={!canSubmit} type=\"submit\">\n        {editing ? (\n          <PiSpinner className=\"spinner\" size={16} />\n        ) : (\n          <FiEdit2 size={16} />\n        )}\n        Edit\n      </button>\n      <p className={invalidMessage ? 'invalid' : 'notify'}>\n        {invalidMessage ? invalidMessage : 'All good. You can edit contact'}\n      </p>\n    </EditFormStyles>\n  );\n};\n\nexport default EditForm;","import { createPortal } from 'react-dom';\nimport { useCustomContext } from 'context/userContext';\nimport EditModalStyled from './EditModalStyles.styled';\nimport EditContactForm from './EditForm';\nimport { useEffect } from 'react';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\n\nconst modalRoot = document.getElementById('contact-edit-modal-root');\n\nconst EditModal = () => {\n  const { name, number, isShowModal, setToggleShowModal } = useCustomContext();\n\n  useEffect(() => {\n    function onEsc(e) {\n      if (e.code !== 'Escape') {\n        return;\n      }\n      setToggleShowModal(!isShowModal);\n    }\n    document.body.style.overflow = 'hidden';\n    const paddingOffSet = window.innerWidth - document.body.offsetWidth + 'px';\n\n    document.body.style.paddingRight = paddingOffSet;\n    window.addEventListener('keydown', onEsc);\n\n    return () => {\n      window.removeEventListener('keydown', onEsc);\n      document.body.style.overflow = 'auto';\n      document.body.style.paddingRight = 0;\n    };\n  }, [isShowModal, setToggleShowModal]);\n\n  const onBackdrop = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    setToggleShowModal(!isShowModal);\n  };\n\n  return createPortal(\n    <EditModalStyled onClick={onBackdrop}>\n      <div className=\"modal\">\n        <button\n          type=\"button\"\n          className=\"close-btn\"\n          onClick={() => setToggleShowModal(!isShowModal)}\n        >\n          <AiOutlineCloseCircle size={24} />\n        </button>\n        <h2>\n          <span className=\"first\">Edit </span> user\n        </h2>\n        <ul className=\"user-info-container\">\n          <li>\n            <p className=\"user-info-item\">\n              Current name: <span className=\"user-info-current\">{name}</span>\n            </p>\n          </li>\n          <li>\n            <p className=\"user-info-item\">\n              Current number:{' '}\n              <span className=\"user-info-current\">{number}</span>\n            </p>\n          </li>\n        </ul>\n\n        <EditContactForm />\n      </div>\n    </EditModalStyled>,\n    modalRoot\n  );\n};\n\nexport default EditModal;","import styled from 'styled-components';\n\nexport const ContainerStyles = styled.div`\n  .error {\n    color: red;\n  }\n\n  .notification {\n    color: green;\n    margin-top: 20px;\n  }\n  #fountainG {\n    position: relative;\n    width: 234px;\n    height: 28px;\n    margin: auto;\n    top: 20px;\n  }\n\n  .fountainG {\n    position: absolute;\n    top: 0;\n    background-color: transparent;\n    width: 28px;\n    height: 28px;\n    animation-name: bounce_fountainG;\n    -o-animation-name: bounce_fountainG;\n    -ms-animation-name: bounce_fountainG;\n    -webkit-animation-name: bounce_fountainG;\n    -moz-animation-name: bounce_fountainG;\n    animation-duration: 0.775s;\n    -o-animation-duration: 0.775s;\n    -ms-animation-duration: 0.775s;\n    -webkit-animation-duration: 0.775s;\n    -moz-animation-duration: 0.775s;\n    animation-iteration-count: infinite;\n    -o-animation-iteration-count: infinite;\n    -ms-animation-iteration-count: infinite;\n    -webkit-animation-iteration-count: infinite;\n    -moz-animation-iteration-count: infinite;\n    animation-direction: normal;\n    -o-animation-direction: normal;\n    -ms-animation-direction: normal;\n    -webkit-animation-direction: normal;\n    -moz-animation-direction: normal;\n    transform: scale(0.3);\n    -o-transform: scale(0.3);\n    -ms-transform: scale(0.3);\n    -webkit-transform: scale(0.3);\n    -moz-transform: scale(0.3);\n    border-radius: 19px;\n    -o-border-radius: 19px;\n    -ms-border-radius: 19px;\n    -webkit-border-radius: 19px;\n    -moz-border-radius: 19px;\n  }\n\n  #fountainG_1 {\n    left: 0;\n    animation-delay: 0.316s;\n    -o-animation-delay: 0.316s;\n    -ms-animation-delay: 0.316s;\n    -webkit-animation-delay: 0.316s;\n    -moz-animation-delay: 0.316s;\n  }\n\n  #fountainG_2 {\n    left: 29px;\n    animation-delay: 0.3925s;\n    -o-animation-delay: 0.3925s;\n    -ms-animation-delay: 0.3925s;\n    -webkit-animation-delay: 0.3925s;\n    -moz-animation-delay: 0.3925s;\n  }\n\n  #fountainG_3 {\n    left: 58px;\n    animation-delay: 0.469s;\n    -o-animation-delay: 0.469s;\n    -ms-animation-delay: 0.469s;\n    -webkit-animation-delay: 0.469s;\n    -moz-animation-delay: 0.469s;\n  }\n\n  #fountainG_4 {\n    left: 88px;\n    animation-delay: 0.5455s;\n    -o-animation-delay: 0.5455s;\n    -ms-animation-delay: 0.5455s;\n    -webkit-animation-delay: 0.5455s;\n    -moz-animation-delay: 0.5455s;\n  }\n\n  #fountainG_5 {\n    left: 117px;\n    animation-delay: 0.622s;\n    -o-animation-delay: 0.622s;\n    -ms-animation-delay: 0.622s;\n    -webkit-animation-delay: 0.622s;\n    -moz-animation-delay: 0.622s;\n  }\n\n  #fountainG_6 {\n    left: 146px;\n    animation-delay: 0.6985s;\n    -o-animation-delay: 0.6985s;\n    -ms-animation-delay: 0.6985s;\n    -webkit-animation-delay: 0.6985s;\n    -moz-animation-delay: 0.6985s;\n  }\n\n  #fountainG_7 {\n    left: 175px;\n    animation-delay: 0.775s;\n    -o-animation-delay: 0.775s;\n    -ms-animation-delay: 0.775s;\n    -webkit-animation-delay: 0.775s;\n    -moz-animation-delay: 0.775s;\n  }\n\n  #fountainG_8 {\n    left: 205px;\n    animation-delay: 0.8615s;\n    -o-animation-delay: 0.8615s;\n    -ms-animation-delay: 0.8615s;\n    -webkit-animation-delay: 0.8615s;\n    -moz-animation-delay: 0.8615s;\n  }\n\n  @keyframes bounce_fountainG {\n    0% {\n      transform: scale(1);\n      background-color: rgb(38, 0, 252);\n    }\n\n    100% {\n      transform: scale(0.3);\n      background-color: rgb(255, 255, 255);\n    }\n  }\n\n  @-o-keyframes bounce_fountainG {\n    0% {\n      -o-transform: scale(1);\n      background-color: rgb(38, 0, 252);\n    }\n\n    100% {\n      -o-transform: scale(0.3);\n      background-color: rgb(255, 255, 255);\n    }\n  }\n\n  @-ms-keyframes bounce_fountainG {\n    0% {\n      -ms-transform: scale(1);\n      background-color: rgb(38, 0, 252);\n    }\n\n    100% {\n      -ms-transform: scale(0.3);\n      background-color: rgb(255, 255, 255);\n    }\n  }\n\n  @-webkit-keyframes bounce_fountainG {\n    0% {\n      -webkit-transform: scale(1);\n      background-color: rgb(38, 0, 252);\n    }\n\n    100% {\n      -webkit-transform: scale(0.3);\n      background-color: rgb(255, 255, 255);\n    }\n  }\n\n  @-moz-keyframes bounce_fountainG {\n    0% {\n      -moz-transform: scale(1);\n      background-color: rgb(38, 0, 252);\n    }\n\n    100% {\n      -moz-transform: scale(0.3);\n      background-color: rgb(255, 255, 255);\n    }\n  }\n`;","import Item from './Item';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ListStyles from './ListStyles.styled';\nimport {\n  getContactsList,\n  getError,\n} from 'redux/contacts/contactsSlice';\nimport { getFilter } from 'redux/contacts/filtersSlice';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\nimport { getIsLoggedIn } from 'redux/auth/selectors';\nimport EditModal from 'components/EditModal/EditModal';\nimport { useCustomContext } from 'context/userContext';\nimport { ContainerStyles } from './ContainerStyles.styled';\nimport { GrFormNextLink, GrFormPreviousLink } from 'react-icons/gr';\nimport ReactPaginate from 'react-paginate';\nimport { useState } from 'react';\n\nconst List = () => {\n  const contacts = useSelector(getContactsList);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const error = useSelector(getError);\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const context = useCustomContext();\n  const [visibleContacts, setVisibleContacts] = useState([]);\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0);\n  const itemsPerPage = 5;\n  const [itemOffset, setItemOffset] = useState(0);\n\n  useEffect(() => {\n    setVisibleContacts(\n      contacts\n        ? [\n            ...contacts\n              .filter(\n                contact =>\n                  contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n                  contact.number.toLowerCase().includes(filter.toLowerCase())\n              )\n              .sort(({ name: firstName }, { name: secondName }) =>\n                firstName.localeCompare(secondName)\n              ),\n          ]\n        : []\n    );\n  }, [contacts, filter]);\n\n  useEffect(() => {\n    const paginationList = document.querySelector('.pagination-list');\n    const firstPage = paginationList?.firstElementChild.nextSibling;\n    const endOffset = itemOffset + itemsPerPage;\n\n    if (endOffset === itemsPerPage) {\n      firstPage?.classList.add('active');\n    } else {\n      firstPage?.classList.remove('active');\n    }\n\n    setCurrentItems(visibleContacts?.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(visibleContacts?.length / itemsPerPage));\n\n    if (\n      visibleContacts.length <=\n        Math.ceil(visibleContacts?.length / itemsPerPage) * itemsPerPage &&\n      itemOffset ===\n        Math.ceil(visibleContacts?.length / itemsPerPage) * itemsPerPage\n    ) {\n      setItemOffset(0);\n      firstPage?.classList.add('active');\n    }\n  }, [itemOffset, itemsPerPage, visibleContacts]);\n\n  const handlePageClick = event => {\n    const newOffset = (event.selected * itemsPerPage) % visibleContacts?.length;\n\n    setItemOffset(newOffset);\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  if (error) {\n    return (\n      <ContainerStyles>\n        <h2 className=\"error\">{error}</h2>;\n      </ContainerStyles>\n    );\n  }\n\n\n  if (contacts.length === 0) {\n    return (\n      <ContainerStyles>\n        <h2 className=\"notification\">\n          You haven't any contacts. Please add contacts to your phonebook\n        </h2>\n      </ContainerStyles>\n    );\n  }\n\n  if (filter && visibleContacts.length === 0) {\n    return (\n      <ContainerStyles>\n        <h2 className=\"notification\">\n          We didn't find any contacts according your search\n        </h2>\n      </ContainerStyles>\n    );\n  }\n\n  if (contacts.length > 0) {\n    return (\n      <ContainerStyles>\n        <ListStyles>\n          {context.isShowModal && <EditModal />}\n          {currentItems?.map(contact => (\n            <Item\n              userName={contact.name}\n              userNumber={contact.number}\n              id={contact.id}\n              key={contact.id}\n            />\n          ))}\n        </ListStyles>\n        {visibleContacts.length > itemsPerPage && (\n          <ReactPaginate\n            className=\"pagination-list pagination\"\n            nextLabel={<GrFormNextLink size={16} />}\n            onPageChange={handlePageClick}\n            pageRangeDisplayed={3}\n            marginPagesDisplayed={2}\n            pageCount={pageCount}\n            previousLabel={<GrFormPreviousLink size={16} />}\n            pageClassName=\"page-item\"\n            pageLinkClassName=\"page-link\"\n            previousClassName=\"page-item\"\n            previousLinkClassName=\"page-link\"\n            nextClassName=\"page-item\"\n            nextLinkClassName=\"page-link\"\n            breakLabel=\"...\"\n            breakClassName=\"page-item\"\n            breakLinkClassName=\"page-link\"\n            containerClassName=\"pagination\"\n            activeClassName=\"active\"\n            renderOnZeroPageCount={null}\n          />\n        )}\n      </ContainerStyles>\n    );\n  }\n};\n\nexport default List;","import styled from 'styled-components';\n\nexport const SearchingStyles = styled.div`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  text-align: center;\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #698af0;\n  border-radius: 12px;\n  border: 1px solid black;\n  margin-top: 8px;\n  h3 {\n    margin-bottom: 10px;\n  }\n\n  input {\n    height: 20px;\n    border-radius: 12px;\n    padding-left: 8px;\n  }\n  .input-container {\n    position: relative;\n    display: inline;\n  }\n\n  .search-icon {\n    position: absolute;\n    right: 8px;\n    top: 50%;\n    transform: translate(0, -50%);\n  }\n`;","import { setFilter, getFilter } from 'redux/contacts/filtersSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SearchingStyles } from './SearchingStyles.styled';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nconst Searching = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  return (\n    <SearchingStyles>\n      <h3>Search contact by name or number</h3>\n      <div className=\"input-container\">\n        <AiOutlineSearch className=\"search-icon\" size={16} />\n        <input\n          onChange={({ target: { value } }) => dispatch(setFilter(value))}\n          value={filter}\n        />\n      </div>\n    </SearchingStyles>\n  );\n};\n\nexport default Searching;\n","import { styled } from 'styled-components';\n\nconst ContactsFormStyles = styled.form`\n  max-width: 600px;\n  text-align: center;\n\n  max-height: 300px;\n  min-height: 200px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  row-gap: 40px;\n  display: flex;\n  flex-direction: column;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  .first {\n    color: black;\n  }\n\n  .add-contact-label-container {\n    width: 180px;\n    margin-left: auto;\n    margin-right: auto;\n    position: relative;\n    display: inline-block;\n  }\n\n  label {\n    position: absolute;\n    left: 8px;\n    bottom: 50%;\n    transition: 250ms linear;\n    transform: translate(0, 50%);\n    font-size: 14px;\n    color: black;\n  }\n\n  input:focus + label {\n    transform: translateY(-100%);\n  }\n\n  input:not(:placeholder-shown) + label {\n    transform: translateY(-100%);\n  }\n\n  input {\n    border-radius: 8px;\n    padding-left: 10px;\n    height: 20px;\n  }\n\n  input::placeholder {\n    opacity: 0;\n  }\n\n  button {\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 8px;\n    padding: 8px 12px;\n    background-color: blue;\n    color: white;\n    transition: 250ms linear;\n    column-gap: 8px;\n    width: 140px;\n    height: 40px;\n  }\n\n  button:hover,\n  button:focus {\n    background-color: #000000;\n  }\n\n  button[disabled] {\n    background-color: gray;\n  }\n\n  .notify {\n    margin-top: -20px;\n  }\n\n  .notify.ok {\n    color: blue;\n  }\n\n  .notify.error {\n    color: green;\n  }\n`;\n\nexport default ContactsFormStyles;","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContactsList, getIsAdding } from 'redux/contacts/contactsSlice';\nimport { addContact } from 'redux/contacts/operations';\nimport { PiSpinnerGap } from 'react-icons/pi';\nimport ContactsFormStyles from './ContactsFormStyles.styled';\nimport Notiflix from 'notiflix';\nimport { GrAdd } from 'react-icons/gr';\n\nconst ContactsForm = () => {\n  const [number, setNumber] = useState('');\n  const [name, setName] = useState('');\n  const contacts = useSelector(getContactsList);\n  const isAdding = useSelector(getIsAdding);\n  const [notify, setNotify] = useState('Please, enter contact info to add');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const dispatch = useDispatch();\n\n  const handlerChangeInput = ({ target }) => {\n    if (target.name === 'name') {\n      setName(target.value);\n    } else {\n      setNumber(target.value);\n    }\n  };\n\n  useEffect(() => {\n    if (!name && !number) {\n      setNotify('Enter name and number to create new contact.');\n      setCanSubmit(false);\n    } else if (name && name.length < 3) {\n      setNotify('Contact name should be 3 symbols minimum.');\n      setCanSubmit(false);\n    } else if (name && name.length > 16) {\n      setNotify('Contact name should be 16 symbols maximum.');\n      setCanSubmit(false);\n    } else if (name && !number) {\n      setNotify('Add contact number.');\n      setCanSubmit(false);\n    } else if (name && number.length < 5) {\n      setNotify('Contact number should be 5 symbols minimum.');\n      setCanSubmit(false);\n    } else if (name && number.length > 16) {\n      setNotify('Contact number should be 16 symbols maximum.');\n      setCanSubmit(false);\n    } else if (number && !name) {\n      setNotify('Enter contact name.');\n      setCanSubmit(false);\n    } else {\n      setNotify('You can add new contact to your book.');\n      setCanSubmit(true);\n    }\n  }, [name, number]);\n\n  const handlerSubmitForm = e => {\n    e.preventDefault();\n\n    if (\n      contacts?.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Notiflix.Notify.failure(`${name} is alredy in your contacts.`);\n      return;\n    } else if (\n      contacts?.some(contact => contact.number.trim() === number.trim())\n    ) {\n      Notiflix.Notify.failure(\n        `The number ${number} is alredy in your contacts.`\n      );\n      return;\n    }\n    if (canSubmit) {\n      dispatch(addContact({ name, number }));\n\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <ContactsFormStyles autoComplete=\"off\" onSubmit={handlerSubmitForm}>\n      <h2>\n        <span className=\"first\">Add </span>contact\n      </h2>\n      <div className=\"add-contact-label-container\">\n        <input\n          id=\"add-name\"\n          placeholder=\"Name\"\n          value={name}\n          onChange={handlerChangeInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label htmlFor=\"add-name\">Name</label>\n      </div>\n      <div className=\"add-contact-label-container\">\n        <input\n          id=\"add-number\"\n          placeholder=\"Number\"\n          value={number}\n          onChange={handlerChangeInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <label htmlFor=\"add-number\">Phone </label>\n      </div>\n\n      <button type=\"submit\" disabled={!canSubmit}>\n        {isAdding ? (\n          <PiSpinnerGap className=\"spinner\" size={16} />\n        ) : (\n          <GrAdd size={16} />\n        )}\n        Add contact\n      </button>\n      <p className={`notify ${canSubmit ? 'ok' : 'error'}`}>{notify}</p>\n    </ContactsFormStyles>\n  );\n};\n\nexport default ContactsForm;","import styled from 'styled-components';\n\nexport const ContactsStyles = styled.section`\n  padding-top: 40px;\n  padding-bottom: 40px;\n  text-align: center;\n  .container {\n    padding-top: 10px;\n    padding-bottom: 10px;\n    min-height: 100vh;\n    height: 100%;\n\n    .page-link {\n      width: 30px;\n      height: 30px;\n      background-color: green;\n      display: block;\n      border-radius: 50%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      cursor: pointer;\n    }\n\n    .pagination {\n      display: flex;\n      column-gap: 10px;\n      justify-content: center;\n      margin-top: 20px;\n      list-style: none;\n    }\n\n    .active .page-link {\n      background-color: blue;\n      color: white;\n    }\n  }\n`;","import List from 'components/List/List';\nimport Searching from 'components/Searching/Searching';\nimport ContactsForm from 'components/ContactsForm/ContactsForm';\nimport Container from 'components/Container/Container';\nimport { ContactsStyles } from './styles/ContactsStyles.styled';\n\nconst Contacts = () => {\n  return (\n    <ContactsStyles>\n      <Container>\n        <ContactsForm />\n        <Searching />\n        <List />\n      </Container>\n    </ContactsStyles>\n  );\n};\n\nexport default Contacts;\n"],"names":["_ref","userId","dispatch","useDispatch","Deleting","useSelector","getDeleting","_useState","useState","_useState2","_slicedToArray","isCurrentButton","setIsCurrentButton","_jsx","disabled","className","onClick","e","deleteContact","finally","children","PiSpinnerGap","size","RiDeleteBin6Line","ItemStyles","styled","_templateObject","_taggedTemplateLiteral","userName","userNumber","id","_jsxs","href","concat","replace","IoMdCall","DeleteBtn","EditFormStyles","_useCustomContext","useCustomContext","name","number","isShowModal","setToggleShowModal","editName","setEditName","_useState3","_useState4","editNumber","setEditNumber","_useState5","_useState6","canSubmit","setCanSubmit","_useState7","_useState8","invalidMessage","setInvalidMessage","contacts","getContactsList","editing","getIsEditing","_useState9","_useState10","onSubmitClick","setOnSubmitClick","handleChange","target","value","useEffect","checkedEditName","toLowerCase","trim","checkedEditNumber","checkedName","checkedNumber","length","some","itemId","autoComplete","onSubmit","preventDefault","sendingName","sendingNumber","editContact","placeholder","pattern","type","onChange","htmlFor","PiSpinner","FiEdit2","modalRoot","document","getElementById","onEsc","code","body","style","overflow","paddingOffSet","window","innerWidth","offsetWidth","paddingRight","addEventListener","removeEventListener","createPortal","EditModalStyled","currentTarget","AiOutlineCloseCircle","EditContactForm","ContainerStyles","filter","getFilter","error","getError","isLoggedIn","getIsLoggedIn","context","visibleContacts","setVisibleContacts","currentItems","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","_toConsumableArray","contact","includes","sort","_ref2","firstName","secondName","localeCompare","paginationList","querySelector","firstPage","firstElementChild","nextSibling","endOffset","classList","add","remove","slice","Math","ceil","fetchContacts","ListStyles","EditModal","map","Item","ReactPaginate","nextLabel","GrFormNextLink","onPageChange","event","newOffset","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","GrFormPreviousLink","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","SearchingStyles","AiOutlineSearch","setFilter","setNumber","setName","isAdding","getIsAdding","notify","setNotify","handlerChangeInput","ContactsFormStyles","Notiflix","addContact","title","required","GrAdd","ContactsStyles","Container","ContactsForm","Searching","List"],"sourceRoot":""}