{"version":3,"file":"static/js/325.623699e7.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","redux/contacts/selectors.js","components/ContactsForm/ContactsForm.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Modal/Modal.jsx","pages/Contacts.jsx"],"sourcesContent":["export const Container = ({ title, children }) => {\n  return (\n    <section>\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n","export const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContactsFilter = state => state.filters;","import { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsList } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport { Notify } from 'notiflix';\n\nexport const ContactForm = ({ onCloseModal }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const formName = e.target.elements.name.value;\n    const formNumber = e.target.elements.number.value;\n    if (contacts.some(({ name }) => name === formName)) {\n      return alert(`${formName} is already in contacts`);\n    }\n\n    if (contacts.some(({ number }) => number === formNumber)) {\n      return alert(`${formNumber} is already in contacts`);\n    }\n\n    dispatch(addContact({ name: formName, number: formNumber.toString() }))\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(\n          `${originalPromiseResult.name} successfully added to contacts`\n        );\n      })\n      .catch(() => {\n        Notify.failure(\"Sorry, something's wrong\");\n      });\n\n    onCloseModal();\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name ...\"\n          value={contacts.name}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"Enter number ...\"\n          value={contacts.number}\n        />\n      </label>\n      <button type=\"submit\">\n        New contact\n      </button>\n    </form>\n  );\n};","import { useDispatch, useSelector } from 'react-redux';\nimport { setContactsFilter } from '../../redux/contacts/filtersSlice';\nimport { selectContactsFilter } from '../../redux/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  const handleChangeFilter = ({ currentTarget: { value } }) => {\n    const normalizedValue = value.toLowerCase().trim();\n    dispatch(setContactsFilter(normalizedValue));\n  };\n\n  return (\n    <label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter contact name\"\n        value={filter}\n        onChange={handleChangeFilter}\n      />\n    </label>\n  );\n};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { Notify } from 'notiflix';\n\nexport const ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = userId => {\n    dispatch(deleteContact(userId))\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(\n          `${originalPromiseResult.name} successfully deleted from contacts`\n        );\n      })\n      .catch(() => {\n        Notify.failure(\"Sorry, something's wrong\");\n      });\n  };\n\n  return (\n    <li key={id}>\n      <p>\n        {name}\n      </p>\n      <performance>\n        {number}\n      </performance>\n      <button onClick={() => handleDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport {\n  selectContactsFilter,\n  selectContactsList,\n} from '../../redux/contacts/selectors';\nimport { ContactsListItem } from '../ContactListItem/ContactListItem';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n  const visibleContacts = [\n    ...contacts.filter(contact => contact.name.toLowerCase().includes(filter)),\n  ];\n\n  return (\n    <ul>\n      {visibleContacts.map(({ name, number, id }) => (\n        <ContactsListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n};","import { useEffect } from 'react';\n\nexport const Modal = ({ children, onCloseModal }) => {\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [onCloseModal]);\n\n  const handleBackdropClick = ({ target, currentTarget }) => {\n    if (currentTarget === target) {\n      onCloseModal();\n    }\n  };\n\n  return (\n    <div onClick={handleBackdropClick}>\n      <div>{children}</div>\n    </div>\n  );\n};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectError, selectIsLoading } from '../redux/contacts/selectors';\nimport { Container } from '../components/Container/Container';\nimport { ContactForm } from '../components/ContactsForm/ContactsForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Modal } from '../components/Modal/Modal';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [isShowModalAddUser, setIsShowModalAddUser] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleOpenModal = () => {\n    setIsShowModalAddUser(prev => !prev);\n  };\n\n  return (\n    <div>\n      <Container>\n        <div>\n          <h2>Contacts</h2>\n          <div>\n            <Filter />\n            <button type=\"button\" onClick={handleOpenModal}>\n              New Contact\n            </button>\n          </div>\n        </div>\n        {isLoading && !error && <b>Request in progress</b>}\n        <ContactList />\n      </Container>\n      {isShowModalAddUser && (\n        <Modal\n          children={\n            <Container title=\"Add New Contact\">\n              <ContactForm onCloseModal={handleOpenModal} />\n            </Container>\n          }\n          onCloseModal={handleOpenModal}\n        ></Modal>\n      )}\n    </div>\n  );\n};\n\nexport default Contacts;"],"names":["Container","_ref","title","children","_jsxs","_jsx","selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","ContactForm","onCloseModal","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","form","target","formName","elements","name","value","formNumber","number","some","_ref2","alert","concat","_ref3","addContact","toString","unwrap","then","originalPromiseResult","Notify","success","catch","failure","reset","autoComplete","type","required","placeholder","Filter","filter","onChange","currentTarget","normalizedValue","toLowerCase","trim","setContactsFilter","ContactsListItem","id","onClick","handleDeleteContact","userId","deleteContact","ContactList","visibleContacts","contact","includes","map","Modal","useEffect","handleKeydown","code","window","addEventListener","removeEventListener","Contacts","isShowModalAddUser","setIsShowModalAddUser","useState","fetchContacts","handleOpenModal","prev"],"sourceRoot":""}